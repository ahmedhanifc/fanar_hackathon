<!DOCTYPE html>
<html>
<head>
    <title>Chat Test - Phishing SMS Case</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 2em; background: #f9f9f9; }
        .chat-container { max-width: 600px; margin: auto; background: #fff; border-radius: 8px; box-shadow: 0 2px 8px #ccc; padding: 2em; }
        .chat-log { border: 1px solid #ddd; border-radius: 4px; padding: 1em; height: 250px; overflow-y: auto; background: #f5f5f5; margin-bottom: 1em; }
        .chat-message { margin-bottom: 0.5em; }
        .chat-message.user { color: #1976d2; }
        .chat-message.assistant { color: #388e3c; }
        .form-row { margin-bottom: 1em; }
        label { display: block; margin-bottom: 0.3em; }
        input, select, button { padding: 0.5em; font-size: 1em; }
        .conversation-id { font-size: 0.9em; color: #888; margin-bottom: 1em; }
    </style>
</head>
<body>
<div class="chat-container">
    <h2>Phishing SMS Case Chat Test</h2>
    <form id="start-case-form">
        <div class="form-row">
            <label for="caseType">Case Type:</label>
            <select id="caseType" name="caseType">
                <option value="phishing_sms_case">Phishing SMS Attack</option>
            </select>
        </div>
        <div class="form-row">
            <label for="language">Language:</label>
            <select id="language" name="language">
                <option value="english">English</option>
            </select>
        </div>
        <button type="submit">Start New Case</button>
    </form>
    <div class="conversation-id" id="conversationIdDisplay" style="display:none;"></div>
    <div class="chat-log" id="chatLog"></div>
    <form id="chat-form" style="display:none;">
        <input type="text" id="userMessage" placeholder="Type your message..." autocomplete="off" style="width:80%;" />
        <button type="submit">Send</button>
    </form>
</div>
<script>
const startCaseForm = document.getElementById('start-case-form');
const chatForm = document.getElementById('chat-form');
const chatLog = document.getElementById('chatLog');
const userMessageInput = document.getElementById('userMessage');
const conversationIdDisplay = document.getElementById('conversationIdDisplay');

let conversationId = null;
let caseType = null;
let language = null;

function appendMessage(role, content) {
    const div = document.createElement('div');
    div.className = 'chat-message ' + role;
    div.textContent = (role === 'user' ? 'You: ' : 'Assistant: ') + content;
    chatLog.appendChild(div);
    chatLog.scrollTop = chatLog.scrollHeight;
}

startCaseForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    caseType = document.getElementById('caseType').value;
    language = document.getElementById('language').value;
    chatLog.innerHTML = '';
    conversationId = null;
    conversationIdDisplay.style.display = 'none';
    chatForm.style.display = 'none';
    appendMessage('assistant', 'Starting new case...');
    const res = await fetch('/api/chat/start-case', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ caseType, language })
    });
    const data = await res.json();
    if (data.conversationId) {
        conversationId = data.conversationId;
        conversationIdDisplay.textContent = 'Conversation ID: ' + conversationId;
        conversationIdDisplay.style.display = 'block';
        appendMessage('assistant', data.message);
        chatForm.style.display = 'block';
        userMessageInput.focus();
    } else {
        appendMessage('assistant', 'Failed to start case.');
    }
});

chatForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    const message = userMessageInput.value.trim();
    if (!message || !conversationId) return;
    appendMessage('user', message);
    userMessageInput.value = '';
    const res = await fetch('/api/chat/chat', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ conversationId, message })
    });
    const data = await res.json();
    if (data.message) {
        appendMessage('assistant', data.message);
    }
    if (data.isComplete) {
        appendMessage('assistant', 'Case is complete. You may start a new case.');
        chatForm.style.display = 'none';
    }
});
</script>
</body>
</html> 